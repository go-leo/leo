// Code generated by protoc-gen-go-leo. DO NOT EDIT.

package helloworld

import (
	context "context"
	cqrs "github.com/go-leo/leo/v3/cqrs"
)

func NewGreeterCqrsService[
	SayHelloQueryType SayHelloQuery, SayHelloResultType SayHelloResult,
](
	sayHelloHandler cqrs.QueryHandler[SayHelloQueryType, SayHelloResultType],
) (GreeterService, error) {
	var bus cqrs.SampleBus
	if err := bus.RegisterQuery(sayHelloHandler); err != nil {
		return nil, err
	}
	return &greeterCqrsService[
		SayHelloQueryType, SayHelloResultType,
	]{bus: &bus}, nil
}

type greeterCqrsService[
	SayHelloQueryType SayHelloQuery, SayHelloResultType SayHelloResult,
] struct {
	bus cqrs.Bus
}

func (svc *greeterCqrsService[
	SayHelloQueryType, SayHelloResultType,
]) SayHello(ctx context.Context, request *HelloRequest) (*HelloReply, error) {
	var query SayHelloQueryType
	q, ctx, err := query.From(ctx, request)
	if err != nil {
		return nil, err
	}
	r, err := svc.bus.Query(ctx, q)
	if err != nil {
		return nil, err
	}
	return r.(SayHelloResultType).To(ctx)
}

type (
	SayHelloQuery interface {
		isSayHelloQuery_Kind()
		From(context.Context, *HelloRequest) (SayHelloQuery, context.Context, error)
	}
	SayHelloResult interface {
		isSayHelloResult_Kind()
		To(context.Context) (*HelloReply, error)
	}
	UnimplementedSayHelloQuery  struct{}
	UnimplementedSayHelloResult struct{}
)

func (UnimplementedSayHelloQuery) isSayHelloQuery_Kind() {}
func (UnimplementedSayHelloQuery) From(context.Context, *HelloRequest) (SayHelloQuery, context.Context, error) {
	panic("implement me")
	return nil, nil, nil
}
func (UnimplementedSayHelloResult) isSayHelloResult_Kind() {}
func (UnimplementedSayHelloResult) To(context.Context) (*HelloReply, error) {
	panic("implement me")
	return nil, nil
}

// helloworld/v1/cq/say_hello_leo.query.pb.go
