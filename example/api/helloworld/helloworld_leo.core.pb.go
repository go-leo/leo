// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package helloworld

import (
	context "context"
	endpoint "github.com/go-kit/kit/endpoint"
	endpointx "github.com/go-leo/leo/v3/endpointx"
)

type GreeterService interface {
	SayHello(ctx context.Context, request *HelloRequest) (*HelloReply, error)
}

type GreeterEndpoints interface {
	SayHello() endpoint.Endpoint
}

type greeterEndpoints struct {
	svc         GreeterService
	middlewares []endpoint.Middleware
}

func (e *greeterEndpoints) SayHello() endpoint.Endpoint {
	component := func(ctx context.Context, request any) (any, error) {
		return e.svc.SayHello(ctx, request.(*HelloRequest))
	}
	return endpointx.Chain(component, e.middlewares...)
}

func NewGreeterEndpoints(svc GreeterService, middlewares ...endpoint.Middleware) GreeterEndpoints {
	return &greeterEndpoints{svc: svc, middlewares: middlewares}
}
