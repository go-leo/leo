// Code generated by protoc-gen-go-leo. DO NOT EDIT.
// If you want edit it, can move this file to another directory.

package cq

import (
	context "context"
	cqrs "github.com/go-leo/leo/v3/cqrs"
	v1 "github.com/go-leo/leo/v3/example/api/route/v1"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

var _ HttpBodyNamedResponseHandler = (*httpBodyNamedResponseHandler)(nil)

type HttpBodyNamedResponseHandler cqrs.QueryHandler[HttpBodyNamedResponseQuery, HttpBodyNamedResponseResult]

type HttpBodyNamedResponseQuery struct {
	v1.UnimplementedHttpBodyNamedResponseQuery
}

func (HttpBodyNamedResponseQuery) From(ctx context.Context, req *emptypb.Empty) (v1.HttpBodyNamedResponseQuery, context.Context, error) {
	panic("implement me")
	return HttpBodyNamedResponseQuery{}, ctx, nil
}

type HttpBodyNamedResponseResult struct {
	v1.UnimplementedHttpBodyNamedResponseResult
}

func (r HttpBodyNamedResponseResult) To(ctx context.Context) (*v1.HttpBody, error) {
	panic("implement me")
	return &v1.HttpBody{}, nil
}

func NewHttpBodyNamedResponseHandler() HttpBodyNamedResponseHandler {
	return &httpBodyNamedResponseHandler{}
}

type httpBodyNamedResponseHandler struct {
}

func (h *httpBodyNamedResponseHandler) Handle(ctx context.Context, q HttpBodyNamedResponseQuery) (HttpBodyNamedResponseResult, error) {
	// TODO implement me
	panic("implement me")
}
