// Code generated by protoc-gen-go-leo. DO NOT EDIT.
// If you want edit it, can move this file to another directory.

package cq

import (
	context "context"
	cqrs "github.com/go-leo/leo/v3/cqrs"
	v1 "github.com/go-leo/leo/v3/example/api/route/v1"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

var _ HttpBodyResponseHandler = (*httpBodyResponseHandler)(nil)

type HttpBodyResponseHandler cqrs.QueryHandler[HttpBodyResponseQuery, HttpBodyResponseResult]

type HttpBodyResponseQuery struct {
	v1.UnimplementedHttpBodyResponseQuery
}

func (HttpBodyResponseQuery) From(ctx context.Context, req *emptypb.Empty) (v1.HttpBodyResponseQuery, context.Context, error) {
	panic("implement me")
	return HttpBodyResponseQuery{}, ctx, nil
}

type HttpBodyResponseResult struct {
	v1.UnimplementedHttpBodyResponseResult
}

func (r HttpBodyResponseResult) To(ctx context.Context) (*httpbody.HttpBody, error) {
	panic("implement me")
	return &httpbody.HttpBody{}, nil
}

func NewHttpBodyResponseHandler() HttpBodyResponseHandler {
	return &httpBodyResponseHandler{}
}

type httpBodyResponseHandler struct {
}

func (h *httpBodyResponseHandler) Handle(ctx context.Context, q HttpBodyResponseQuery) (HttpBodyResponseResult, error) {
	// TODO implement me
	panic("implement me")
}
