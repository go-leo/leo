// Code generated by protoc-gen-go-leo. DO NOT EDIT.
// If you want edit it, can move this file to another directory.

package cq

import (
	context "context"
	cqrs "github.com/go-leo/leo/v3/cqrs"
	v1 "github.com/go-leo/leo/v3/example/api/route/v1"
	http "google.golang.org/genproto/googleapis/rpc/http"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

var _ HttpResponseHandler = (*httpResponseHandler)(nil)

type HttpResponseHandler cqrs.QueryHandler[HttpResponseQuery, HttpResponseResult]

type HttpResponseQuery struct {
	v1.UnimplementedHttpResponseQuery
}

func (HttpResponseQuery) From(ctx context.Context, req *emptypb.Empty) (v1.HttpResponseQuery, context.Context, error) {
	panic("implement me")
	return HttpResponseQuery{}, ctx, nil
}

type HttpResponseResult struct {
	v1.UnimplementedHttpResponseResult
}

func (r HttpResponseResult) To(ctx context.Context) (*http.HttpResponse, error) {
	panic("implement me")
	return &http.HttpResponse{}, nil
}

func NewHttpResponseHandler() HttpResponseHandler {
	return &httpResponseHandler{}
}

type httpResponseHandler struct {
}

func (h *httpResponseHandler) Handle(ctx context.Context, q HttpResponseQuery) (HttpResponseResult, error) {
	// TODO implement me
	panic("implement me")
}
