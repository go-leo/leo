// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package path

import (
	context "context"
	endpoint "github.com/go-kit/kit/endpoint"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

type pathEndpoints struct {
	svc interface {
		NamedPathString(ctx context.Context, request *NamedPathRequest) (*emptypb.Empty, error)
		NamedPathOptString(ctx context.Context, request *NamedPathRequest) (*emptypb.Empty, error)
		NamedPathWrapString(ctx context.Context, request *NamedPathRequest) (*emptypb.Empty, error)
		EmbedNamedPathString(ctx context.Context, request *EmbedNamedPathRequest) (*emptypb.Empty, error)
		EmbedNamedPathOptString(ctx context.Context, request *EmbedNamedPathRequest) (*emptypb.Empty, error)
		EmbedNamedPathWrapString(ctx context.Context, request *EmbedNamedPathRequest) (*emptypb.Empty, error)
		BoolPath(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		Int32Path(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		Int64Path(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		Uint32Path(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		Uint64Path(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		FloatPath(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		DoublePath(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		StringPath(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		EnumPath(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		MixPath(ctx context.Context, request *MixPathRequest) (*emptypb.Empty, error)
	}
}

func (e *pathEndpoints) NamedPathString() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.NamedPathString(ctx, request.(*NamedPathRequest))
	}
}

func (e *pathEndpoints) NamedPathOptString() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.NamedPathOptString(ctx, request.(*NamedPathRequest))
	}
}

func (e *pathEndpoints) NamedPathWrapString() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.NamedPathWrapString(ctx, request.(*NamedPathRequest))
	}
}

func (e *pathEndpoints) EmbedNamedPathString() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.EmbedNamedPathString(ctx, request.(*EmbedNamedPathRequest))
	}
}

func (e *pathEndpoints) EmbedNamedPathOptString() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.EmbedNamedPathOptString(ctx, request.(*EmbedNamedPathRequest))
	}
}

func (e *pathEndpoints) EmbedNamedPathWrapString() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.EmbedNamedPathWrapString(ctx, request.(*EmbedNamedPathRequest))
	}
}

func (e *pathEndpoints) BoolPath() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.BoolPath(ctx, request.(*PathRequest))
	}
}

func (e *pathEndpoints) Int32Path() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.Int32Path(ctx, request.(*PathRequest))
	}
}

func (e *pathEndpoints) Int64Path() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.Int64Path(ctx, request.(*PathRequest))
	}
}

func (e *pathEndpoints) Uint32Path() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.Uint32Path(ctx, request.(*PathRequest))
	}
}

func (e *pathEndpoints) Uint64Path() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.Uint64Path(ctx, request.(*PathRequest))
	}
}

func (e *pathEndpoints) FloatPath() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.FloatPath(ctx, request.(*PathRequest))
	}
}

func (e *pathEndpoints) DoublePath() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.DoublePath(ctx, request.(*PathRequest))
	}
}

func (e *pathEndpoints) StringPath() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.StringPath(ctx, request.(*PathRequest))
	}
}

func (e *pathEndpoints) EnumPath() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.EnumPath(ctx, request.(*PathRequest))
	}
}

func (e *pathEndpoints) MixPath() endpoint.Endpoint {
	return func(ctx context.Context, request any) (any, error) {
		return e.svc.MixPath(ctx, request.(*MixPathRequest))
	}
}

func NewpathEndpoints(
	svc interface {
		NamedPathString(ctx context.Context, request *NamedPathRequest) (*emptypb.Empty, error)
		NamedPathOptString(ctx context.Context, request *NamedPathRequest) (*emptypb.Empty, error)
		NamedPathWrapString(ctx context.Context, request *NamedPathRequest) (*emptypb.Empty, error)
		EmbedNamedPathString(ctx context.Context, request *EmbedNamedPathRequest) (*emptypb.Empty, error)
		EmbedNamedPathOptString(ctx context.Context, request *EmbedNamedPathRequest) (*emptypb.Empty, error)
		EmbedNamedPathWrapString(ctx context.Context, request *EmbedNamedPathRequest) (*emptypb.Empty, error)
		BoolPath(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		Int32Path(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		Int64Path(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		Uint32Path(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		Uint64Path(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		FloatPath(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		DoublePath(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		StringPath(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		EnumPath(ctx context.Context, request *PathRequest) (*emptypb.Empty, error)
		MixPath(ctx context.Context, request *MixPathRequest) (*emptypb.Empty, error)
	},
) interface {
	NamedPathString() endpoint.Endpoint
	NamedPathOptString() endpoint.Endpoint
	NamedPathWrapString() endpoint.Endpoint
	EmbedNamedPathString() endpoint.Endpoint
	EmbedNamedPathOptString() endpoint.Endpoint
	EmbedNamedPathWrapString() endpoint.Endpoint
	BoolPath() endpoint.Endpoint
	Int32Path() endpoint.Endpoint
	Int64Path() endpoint.Endpoint
	Uint32Path() endpoint.Endpoint
	Uint64Path() endpoint.Endpoint
	FloatPath() endpoint.Endpoint
	DoublePath() endpoint.Endpoint
	StringPath() endpoint.Endpoint
	EnumPath() endpoint.Endpoint
	MixPath() endpoint.Endpoint
} {
	return &pathEndpoints{svc: svc}
}
