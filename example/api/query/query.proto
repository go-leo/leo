syntax = "proto3";
package leo.example.query.v1;
option go_package = "github.com/go-leo/leo/example/api/query/v1;query";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

service Query {
  rpc Query (QueryRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get : "/v1/query"
    };
  }
}

message QueryRequest {
  bool bool = 2;
  int32 int32 = 3;
  sint32 sint32 = 4;
  uint32 uint32 = 6;
  int64 int64 = 7;
  sint64 sint64 = 8;
  uint64 uint64 = 9;
  sfixed32 sfixed32 = 10;
  fixed32 fixed32 = 11;
  float float = 12;
  sfixed64 sfixed64 = 13;
  fixed64 fixed64 = 14;
  double  double = 15;
  string string = 16;

  optional bool opt_bool = 22;
  optional int32 opt_int32 = 23;
  optional sint32 opt_sint32 = 24;
  optional uint32 opt_uint32 = 26;
  optional int64 opt_int64 = 27;
  optional sint64 opt_sint64 = 28;
  optional uint64 opt_uint64 = 29;
  optional sfixed32 opt_sfixed32 = 30;
  optional fixed32 opt_fixed32 = 31;
  optional float opt_float = 32;
  optional sfixed64 opt_sfixed64 = 33;
  optional fixed64 opt_fixed64 = 34;
  optional double  opt_double = 35;
  optional string opt_string = 36;

  repeated bool rep_bool = 52;
  repeated int32 rep_int32 = 53;
  repeated sint32 rep_sint32 = 54;
  repeated uint32 rep_uint32 = 56;
  repeated int64 rep_int64 = 57;
  repeated sint64 rep_sint64 = 58;
  repeated uint64 rep_uint64 = 59;
  repeated sfixed32 rep_sfixed32 = 60;
  repeated fixed32 rep_fixed32 = 61;
  repeated float rep_float = 62;
  repeated sfixed64 rep_sfixed64 = 63;
  repeated fixed64 rep_fixed64 = 64;
  repeated double  rep_double = 65;
  repeated  string rep_string = 66;

  google.protobuf.DoubleValue wrap_double = 42;
  google.protobuf.FloatValue wrap_float = 43;
  google.protobuf.Int64Value wrap_int64 = 44;
  google.protobuf.UInt64Value wrap_uint64 = 45;
  google.protobuf.Int32Value wrap_int32 = 46;
  google.protobuf.UInt32Value wrap_uint32 = 47;
  google.protobuf.BoolValue wrap_bool = 48;
  google.protobuf.StringValue wrap_string = 49;


  optional google.protobuf.DoubleValue opt_wrap_double = 79;
  optional google.protobuf.FloatValue opt_wrap_float = 80;
  optional google.protobuf.Int64Value opt_wrap_int64 = 81;
  optional google.protobuf.UInt64Value opt_wrap_uint64 = 82;
  optional google.protobuf.Int32Value opt_wrap_int32 = 83;
  optional google.protobuf.UInt32Value opt_wrap_uint32 = 84;
  optional google.protobuf.BoolValue opt_wrap_bool = 85;
  optional google.protobuf.StringValue opt_wrap_string = 86;

  repeated google.protobuf.DoubleValue rep_wrap_double = 88;
  repeated google.protobuf.FloatValue rep_wrap_float = 89;
  repeated google.protobuf.Int64Value rep_wrap_int64 = 90;
  repeated google.protobuf.UInt64Value rep_wrap_uint64 = 91;
  repeated google.protobuf.Int32Value rep_wrap_int32 = 92;
  repeated google.protobuf.UInt32Value rep_wrap_uint32 = 93;
  repeated google.protobuf.BoolValue rep_wrap_bool = 94;
  repeated google.protobuf.StringValue rep_wrap_string = 95;

  enum Status {
    UNKNOWN = 0;
    OK = 1;
    CANCELLED = 2;
    UNKNOWN_ERROR = 3;
  }

  Status status = 68;
  optional Status opt_status = 69;
  repeated Status rep_status = 70;

}
