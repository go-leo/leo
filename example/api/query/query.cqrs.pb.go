// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package query

import (
	context "context"
	cqrs "github.com/go-leo/leo/v3/cqrs"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// QueryAssembler responsible for completing the transformation between domain model objects and DTOs
type QueryAssembler interface {
}

// QueryCQRSService implement the Query service with CQRS pattern
type QueryCQRSService struct {
	bus       cqrs.Bus
	assembler QueryAssembler
}

func NewQueryCQRSService(bus cqrs.Bus, assembler QueryAssembler) *QueryCQRSService {
	return &QueryCQRSService{bus: bus, assembler: assembler}
}

func (svc *QueryCQRSService) Query(ctx context.Context, request *QueryRequest) (*emptypb.Empty, error) {
	args, ctx, err := svc.assembler.FromQueryRequest(ctx, request)
	if err != nil {
		return nil, err
	}
}

func NewQueryBus(
	opts ...cqrs.Option,
) (cqrs.Bus, error) {
	bus := cqrs.NewBus(opts...)
	return bus, nil
}
