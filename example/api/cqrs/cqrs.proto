syntax = "proto3";
package pb;
option go_package = "github.com/go-leo/leo/v3/example/api/cqrs/v1;cqrs";

import "leo/cqrs/annotations.proto";
import "google/protobuf/empty.proto";

service CQRS {
  option(leo.cqrs.command) = {
    package: "github.com/go-leo/leo/v3/example/internal/cqrs/command"
    relative: "../../../internal/cqrs/command"
  };

  option(leo.cqrs.query) = {
    package: "github.com/go-leo/leo/v3/example/internal/cqrs/query"
    relative:  "../../../internal/cqrs/query"
  };

  rpc CreateUser (CreateUserRequest) returns (google.protobuf.Empty) {}

  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}

  rpc FindUser (FindUserRequest) returns (GetUserResponse) {}

}

message CreateUserRequest {
  string name = 1;
  int32 age = 2;
  double salary = 3;
  string Token = 4;
}

message FindUserRequest {
  string name = 1;
}

message GetUserResponse {
  string name = 1;
  int32 age = 2;
  double salary = 3;
  string Token = 4;
}

message DeleteUserRequest {
  string name = 1;
}

message DeleteUserResponse {

}

message UpdateUserRequest {
  string name = 1;
  int32 age = 2;
  double salary = 3;
  string Token = 4;
}

message UpdateUserResponse {
  oneof result {
    int32 code = 1;
    string message = 2;
  }
}