// Code generated by protoc-gen-go-leo. DO NOT EDIT.
// If you want edit it, can move this file to another directory.

package cq

import (
	context "context"
	cqrs "github.com/go-leo/leo/v3/cqrs"
	v1 "github.com/go-leo/leo/v3/example/api/cqrs/v1"
)

var _ QueryOneOfHandler = (*queryOneOfHandler)(nil)

type QueryOneOfHandler cqrs.QueryHandler[QueryOneOfQuery, QueryOneOfResult]

type QueryOneOfQuery struct {
	v1.UnimplementedQueryOneOfQuery
}

func (QueryOneOfQuery) From(ctx context.Context, req *v1.QueryRequest) (v1.QueryOneOfQuery, context.Context, error) {
	panic("implement me")
	return QueryOneOfQuery{}, ctx, nil
}

type QueryOneOfResult struct {
	v1.UnimplementedQueryOneOfResult
}

func (r QueryOneOfResult) To(ctx context.Context) (*v1.QueryOneOfReply, error) {
	panic("implement me")
	return &v1.QueryOneOfReply{}, nil
}

func NewQueryOneOfHandler() QueryOneOfHandler {
	return &queryOneOfHandler{}
}

type queryOneOfHandler struct {
}

func (h *queryOneOfHandler) Handle(ctx context.Context, q QueryOneOfQuery) (QueryOneOfResult, error) {
	// TODO implement me
	panic("implement me")
}
