syntax = "proto3";
package leo.example.response.v1;
option go_package = "github.com/go-leo/leo/v3/example/api/response/v1;response";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "google/rpc/http.proto";

service Response {
  rpc OmittedResponse (google.protobuf.Empty) returns (UserResponse) {
    option (google.api.http) = {
      post : "/v1/omitted/response"
    };
  }

  rpc StarResponse (google.protobuf.Empty) returns (UserResponse) {
    option (google.api.http) = {
      post : "/v1/star/response"
      response_body : "*"
    };
  }

  rpc NamedResponse (google.protobuf.Empty) returns (UserResponse) {
    option (google.api.http) = {
      post : "/v1/named/response"
      response_body : "user"
    };
  }

  rpc HttpBodyResponse (google.protobuf.Empty) returns (google.api.HttpBody) {
    option (google.api.http) = {
      put : "/v1/http/body/omitted/response"
    };
  }

  rpc HttpBodyNamedResponse (google.protobuf.Empty) returns (HttpBody) {
    option (google.api.http) = {
      put : "/v1/http/body/named/response"
      response_body : "body"
    };
  }

  rpc HttpRequestStarBody (google.rpc.HttpRequest) returns (google.rpc.HttpResponse) {
    option (google.api.http) = {
      put : "/v1/http/request/response"
    };
  }
}

message User {
  string name = 1;
  string email = 2;
  string phone = 3;
  string address = 4;
}

message UserResponse {
  User user = 97;
}

message HttpBody {
  google.api.HttpBody body = 1;
}