// Code generated by protoc-gen-go-leo. DO NOT EDIT.
// If you want edit it, can move this file to another directory.

package cq

import (
	context "context"
	cqrs "github.com/go-leo/leo/v3/cqrs"
	v1 "github.com/go-leo/leo/v3/example/api/demo/v1"
)

var _ GetUsersHandler = (*getUsersHandler)(nil)

type GetUsersHandler cqrs.QueryHandler[GetUsersQuery, GetUsersResult]

type GetUsersQuery struct {
	v1.UnimplementedGetUsersQuery
}

func (GetUsersQuery) From(ctx context.Context, req *v1.GetUsersRequest) (v1.GetUsersQuery, context.Context, error) {
	panic("implement me")
	return GetUsersQuery{}, ctx, nil
}

type GetUsersResult struct {
	v1.UnimplementedGetUsersResult
}

func (r GetUsersResult) To(ctx context.Context) (*v1.GetUsersResponse, error) {
	panic("implement me")
	return &v1.GetUsersResponse{}, nil
}

func NewGetUsersHandler() GetUsersHandler {
	return &getUsersHandler{}
}

type getUsersHandler struct {
}

func (h *getUsersHandler) Handle(ctx context.Context, q GetUsersQuery) (GetUsersResult, error) {
	// TODO implement me
	panic("implement me")
}
