// Code generated by protoc-gen-go-leo. DO NOT EDIT.
// If you want edit it, can move this file to another directory.

package cq

import (
	context "context"
	cqrs "github.com/go-leo/leo/v3/cqrs"
	v1 "github.com/go-leo/leo/v3/example/api/library/v1"
)

var _ CreateShelfHandler = (*createShelfHandler)(nil)

type CreateShelfHandler cqrs.QueryHandler[CreateShelfQuery, CreateShelfResult]

type CreateShelfQuery struct {
	v1.UnimplementedCreateShelfQuery
}

func (CreateShelfQuery) From(ctx context.Context, req *v1.CreateShelfRequest) (v1.CreateShelfQuery, context.Context, error) {
	panic("implement me")
	return CreateShelfQuery{}, ctx, nil
}

type CreateShelfResult struct {
	v1.UnimplementedCreateShelfResult
}

func (r CreateShelfResult) To(ctx context.Context) (*v1.Shelf, error) {
	panic("implement me")
	return &v1.Shelf{}, nil
}

func NewCreateShelfHandler() CreateShelfHandler {
	return &createShelfHandler{}
}

type createShelfHandler struct {
}

func (h *createShelfHandler) Handle(ctx context.Context, q CreateShelfQuery) (CreateShelfResult, error) {
	// TODO implement me
	panic("implement me")
}
