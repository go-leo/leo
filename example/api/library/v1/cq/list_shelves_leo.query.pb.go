// Code generated by protoc-gen-go-leo. DO NOT EDIT.
// If you want edit it, can move this file to another directory.

package cq

import (
	context "context"
	cqrs "github.com/go-leo/leo/v3/cqrs"
	v1 "github.com/go-leo/leo/v3/example/api/library/v1"
)

var _ ListShelvesHandler = (*listShelvesHandler)(nil)

type ListShelvesHandler cqrs.QueryHandler[ListShelvesQuery, ListShelvesResult]

type ListShelvesQuery struct {
	v1.UnimplementedListShelvesQuery
}

func (ListShelvesQuery) From(ctx context.Context, req *v1.ListShelvesRequest) (v1.ListShelvesQuery, context.Context, error) {
	panic("implement me")
	return ListShelvesQuery{}, ctx, nil
}

type ListShelvesResult struct {
	v1.UnimplementedListShelvesResult
}

func (r ListShelvesResult) To(ctx context.Context) (*v1.ListShelvesResponse, error) {
	panic("implement me")
	return &v1.ListShelvesResponse{}, nil
}

func NewListShelvesHandler() ListShelvesHandler {
	return &listShelvesHandler{}
}

type listShelvesHandler struct {
}

func (h *listShelvesHandler) Handle(ctx context.Context, q ListShelvesQuery) (ListShelvesResult, error) {
	// TODO implement me
	panic("implement me")
}
