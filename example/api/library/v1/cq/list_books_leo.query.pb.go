// Code generated by protoc-gen-go-leo. DO NOT EDIT.
// If you want edit it, can move this file to another directory.

package cq

import (
	context "context"
	cqrs "github.com/go-leo/leo/v3/cqrs"
	v1 "github.com/go-leo/leo/v3/example/api/library/v1"
)

var _ ListBooksHandler = (*listBooksHandler)(nil)

type ListBooksHandler cqrs.QueryHandler[ListBooksQuery, ListBooksResult]

type ListBooksQuery struct {
	v1.UnimplementedListBooksQuery
}

func (ListBooksQuery) From(ctx context.Context, req *v1.ListBooksRequest) (v1.ListBooksQuery, context.Context, error) {
	panic("implement me")
	return ListBooksQuery{}, ctx, nil
}

type ListBooksResult struct {
	v1.UnimplementedListBooksResult
}

func (r ListBooksResult) To(ctx context.Context) (*v1.ListBooksResponse, error) {
	panic("implement me")
	return &v1.ListBooksResponse{}, nil
}

func NewListBooksHandler() ListBooksHandler {
	return &listBooksHandler{}
}

type listBooksHandler struct {
}

func (h *listBooksHandler) Handle(ctx context.Context, q ListBooksQuery) (ListBooksResult, error) {
	// TODO implement me
	panic("implement me")
}
