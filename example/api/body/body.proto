syntax = "proto3";
package leo.example.body.v1;
option go_package = "github.com/go-leo/leo/example/api/body/v1;body";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "google/rpc/http.proto";

service Body {
  rpc StarBody (User) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/v1/star/body"
      body : "*"
    };
  }

  rpc NamedBody (UserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/v1/named/body"
      body : "user"
    };
  }

  rpc NonBody (google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get : "/v1/user_body"
    };
  }

  rpc HttpBodyStarBody (google.api.HttpBody) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/v1/http/body/star/body"
      body : "*"
    };
  }

  rpc HttpBodyNamedBody (HttpBody) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/v1/http/body/named/body"
      body : "body"
    };
  }

  rpc HttpRequestStarBody (google.rpc.HttpRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/v1/http/request/star/body"
      body : "*"
    };
  }
}

message User {
  string name = 1;
  string email = 2;
  string phone = 3;
  string address = 4;
}

message UserRequest {
  User user = 97;
}

message HttpBody {
  google.api.HttpBody body = 1;
}