// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package body

import (
	context "context"
	endpoint "github.com/go-kit/kit/endpoint"
	grpc "github.com/go-kit/kit/transport/grpc"
	endpointx "github.com/go-leo/kitx/endpointx"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	http "google.golang.org/genproto/googleapis/rpc/http"
	grpc1 "google.golang.org/grpc"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

type gRPCBodyServer struct {
	bool grpc.Handler

	optBool grpc.Handler

	repBool grpc.Handler

	wrapBool grpc.Handler

	int32 grpc.Handler

	optInt32 grpc.Handler

	repInt32 grpc.Handler

	wrapInt32 grpc.Handler

	uint32 grpc.Handler

	optUint32 grpc.Handler

	repUint32 grpc.Handler

	wrapUint32 grpc.Handler

	fixed32 grpc.Handler

	optFixed32 grpc.Handler

	repFixed32 grpc.Handler

	int64 grpc.Handler

	optInt64 grpc.Handler

	repInt64 grpc.Handler

	wrapInt64 grpc.Handler

	sint64 grpc.Handler

	optSint64 grpc.Handler

	repSint64 grpc.Handler

	sfixed64 grpc.Handler

	optSfixed64 grpc.Handler

	repSfixed64 grpc.Handler

	uint64 grpc.Handler

	optUint64 grpc.Handler

	repUint64 grpc.Handler

	wrapUint64 grpc.Handler

	fixed64 grpc.Handler

	optFixed64 grpc.Handler

	repFixed64 grpc.Handler

	float32 grpc.Handler

	optFloat32 grpc.Handler

	repFloat32 grpc.Handler

	wrapFloat32 grpc.Handler

	float64 grpc.Handler

	optFloat64 grpc.Handler

	repFloat64 grpc.Handler

	wrapFloat64 grpc.Handler

	string grpc.Handler

	optString grpc.Handler

	repString grpc.Handler

	wrapString grpc.Handler

	bytes grpc.Handler

	optBytes grpc.Handler

	repBytes grpc.Handler

	wrapBytes grpc.Handler

	enum grpc.Handler

	optEnum grpc.Handler

	repEnum grpc.Handler

	dictionary grpc.Handler

	httpBody grpc.Handler

	httpRequest grpc.Handler

	valueRequest grpc.Handler

	listValueRequest grpc.Handler

	structRequest grpc.Handler

	timestampRequest grpc.Handler

	durationRequest grpc.Handler

	wrapDoubleBody grpc.Handler

	wrapFloatBody grpc.Handler

	wrapInt64Body grpc.Handler

	wrapUint64Body grpc.Handler

	wrapInt32Body grpc.Handler

	wrapUint32Body grpc.Handler

	wrapBoolBody grpc.Handler

	wrapStringBody grpc.Handler

	wrapBytesBody grpc.Handler

	httpBodyBody grpc.Handler

	httpRequestBody grpc.Handler

	valueBody grpc.Handler

	listValueBody grpc.Handler

	structBody grpc.Handler

	timestampBody grpc.Handler

	durationBody grpc.Handler
}

func (s *gRPCBodyServer) Bool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.bool.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optBool.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repBool.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapBool.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Int32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.int32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optInt32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repInt32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapInt32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Uint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.uint32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optUint32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repUint32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapUint32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Fixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.fixed32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptFixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optFixed32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepFixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repFixed32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Int64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.int64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optInt64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repInt64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapInt64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Sint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.sint64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptSint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optSint64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepSint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repSint64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Sfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.sfixed64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptSfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optSfixed64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepSfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repSfixed64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Uint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.uint64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optUint64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repUint64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapUint64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Fixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.fixed64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptFixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optFixed64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepFixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repFixed64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Float32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.float32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optFloat32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repFloat32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapFloat32.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Float64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.float64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optFloat64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repFloat64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapFloat64.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) String(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.string.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optString.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repString.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapString.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Bytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.bytes.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optBytes.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repBytes.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapBytes.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Enum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.enum.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) OptEnum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.optEnum.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) RepEnum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.repEnum.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) Dictionary(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.dictionary.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) HttpBody(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.httpBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) HttpRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.httpRequest.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) ValueRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.valueRequest.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) ListValueRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.listValueRequest.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) StructRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.structRequest.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) TimestampRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.timestampRequest.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) DurationRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.durationRequest.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapDoubleBody(ctx context.Context, request *wrapperspb.DoubleValue) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapDoubleBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapFloatBody(ctx context.Context, request *wrapperspb.FloatValue) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapFloatBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapInt64Body(ctx context.Context, request *wrapperspb.Int64Value) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapInt64Body.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapUint64Body(ctx context.Context, request *wrapperspb.UInt64Value) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapUint64Body.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapInt32Body(ctx context.Context, request *wrapperspb.Int32Value) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapInt32Body.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapUint32Body(ctx context.Context, request *wrapperspb.UInt32Value) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapUint32Body.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapBoolBody(ctx context.Context, request *wrapperspb.BoolValue) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapBoolBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapStringBody(ctx context.Context, request *wrapperspb.StringValue) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapStringBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) WrapBytesBody(ctx context.Context, request *wrapperspb.BytesValue) (*emptypb.Empty, error) {
	ctx, rep, err := s.wrapBytesBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) HttpBodyBody(ctx context.Context, request *httpbody.HttpBody) (*emptypb.Empty, error) {
	ctx, rep, err := s.httpBodyBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) HttpRequestBody(ctx context.Context, request *http.HttpRequest) (*emptypb.Empty, error) {
	ctx, rep, err := s.httpRequestBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) ValueBody(ctx context.Context, request *structpb.Value) (*emptypb.Empty, error) {
	ctx, rep, err := s.valueBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) ListValueBody(ctx context.Context, request *structpb.ListValue) (*emptypb.Empty, error) {
	ctx, rep, err := s.listValueBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) StructBody(ctx context.Context, request *structpb.Struct) (*emptypb.Empty, error) {
	ctx, rep, err := s.structBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) TimestampBody(ctx context.Context, request *timestamppb.Timestamp) (*emptypb.Empty, error) {
	ctx, rep, err := s.timestampBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func (s *gRPCBodyServer) DurationBody(ctx context.Context, request *durationpb.Duration) (*emptypb.Empty, error) {
	ctx, rep, err := s.durationBody.ServeGRPC(ctx, request)
	if err != nil {
		return nil, err
	}
	_ = ctx
	return rep.(*emptypb.Empty), nil
}

func NewBodyGRPCServer(
	endpoints interface {
		Bool() endpoint.Endpoint
		OptBool() endpoint.Endpoint
		RepBool() endpoint.Endpoint
		WrapBool() endpoint.Endpoint
		Int32() endpoint.Endpoint
		OptInt32() endpoint.Endpoint
		RepInt32() endpoint.Endpoint
		WrapInt32() endpoint.Endpoint
		Uint32() endpoint.Endpoint
		OptUint32() endpoint.Endpoint
		RepUint32() endpoint.Endpoint
		WrapUint32() endpoint.Endpoint
		Fixed32() endpoint.Endpoint
		OptFixed32() endpoint.Endpoint
		RepFixed32() endpoint.Endpoint
		Int64() endpoint.Endpoint
		OptInt64() endpoint.Endpoint
		RepInt64() endpoint.Endpoint
		WrapInt64() endpoint.Endpoint
		Sint64() endpoint.Endpoint
		OptSint64() endpoint.Endpoint
		RepSint64() endpoint.Endpoint
		Sfixed64() endpoint.Endpoint
		OptSfixed64() endpoint.Endpoint
		RepSfixed64() endpoint.Endpoint
		Uint64() endpoint.Endpoint
		OptUint64() endpoint.Endpoint
		RepUint64() endpoint.Endpoint
		WrapUint64() endpoint.Endpoint
		Fixed64() endpoint.Endpoint
		OptFixed64() endpoint.Endpoint
		RepFixed64() endpoint.Endpoint
		Float32() endpoint.Endpoint
		OptFloat32() endpoint.Endpoint
		RepFloat32() endpoint.Endpoint
		WrapFloat32() endpoint.Endpoint
		Float64() endpoint.Endpoint
		OptFloat64() endpoint.Endpoint
		RepFloat64() endpoint.Endpoint
		WrapFloat64() endpoint.Endpoint
		String() endpoint.Endpoint
		OptString() endpoint.Endpoint
		RepString() endpoint.Endpoint
		WrapString() endpoint.Endpoint
		Bytes() endpoint.Endpoint
		OptBytes() endpoint.Endpoint
		RepBytes() endpoint.Endpoint
		WrapBytes() endpoint.Endpoint
		Enum() endpoint.Endpoint
		OptEnum() endpoint.Endpoint
		RepEnum() endpoint.Endpoint
		Dictionary() endpoint.Endpoint
		HttpBody() endpoint.Endpoint
		HttpRequest() endpoint.Endpoint
		ValueRequest() endpoint.Endpoint
		ListValueRequest() endpoint.Endpoint
		StructRequest() endpoint.Endpoint
		TimestampRequest() endpoint.Endpoint
		DurationRequest() endpoint.Endpoint
		WrapDoubleBody() endpoint.Endpoint
		WrapFloatBody() endpoint.Endpoint
		WrapInt64Body() endpoint.Endpoint
		WrapUint64Body() endpoint.Endpoint
		WrapInt32Body() endpoint.Endpoint
		WrapUint32Body() endpoint.Endpoint
		WrapBoolBody() endpoint.Endpoint
		WrapStringBody() endpoint.Endpoint
		WrapBytesBody() endpoint.Endpoint
		HttpBodyBody() endpoint.Endpoint
		HttpRequestBody() endpoint.Endpoint
		ValueBody() endpoint.Endpoint
		ListValueBody() endpoint.Endpoint
		StructBody() endpoint.Endpoint
		TimestampBody() endpoint.Endpoint
		DurationBody() endpoint.Endpoint
	},
	mdw []endpoint.Middleware,
	opts ...grpc.ServerOption,
) interface {
	Bool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Int32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Uint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Fixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptFixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepFixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Int64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Sint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptSint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepSint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Sfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptSfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepSfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Uint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Fixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptFixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepFixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Float32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Float64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	String(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Bytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Enum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptEnum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepEnum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Dictionary(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	HttpBody(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	HttpRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	ValueRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	ListValueRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	StructRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	TimestampRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	DurationRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapDoubleBody(ctx context.Context, request *wrapperspb.DoubleValue) (*emptypb.Empty, error)
	WrapFloatBody(ctx context.Context, request *wrapperspb.FloatValue) (*emptypb.Empty, error)
	WrapInt64Body(ctx context.Context, request *wrapperspb.Int64Value) (*emptypb.Empty, error)
	WrapUint64Body(ctx context.Context, request *wrapperspb.UInt64Value) (*emptypb.Empty, error)
	WrapInt32Body(ctx context.Context, request *wrapperspb.Int32Value) (*emptypb.Empty, error)
	WrapUint32Body(ctx context.Context, request *wrapperspb.UInt32Value) (*emptypb.Empty, error)
	WrapBoolBody(ctx context.Context, request *wrapperspb.BoolValue) (*emptypb.Empty, error)
	WrapStringBody(ctx context.Context, request *wrapperspb.StringValue) (*emptypb.Empty, error)
	WrapBytesBody(ctx context.Context, request *wrapperspb.BytesValue) (*emptypb.Empty, error)
	HttpBodyBody(ctx context.Context, request *httpbody.HttpBody) (*emptypb.Empty, error)
	HttpRequestBody(ctx context.Context, request *http.HttpRequest) (*emptypb.Empty, error)
	ValueBody(ctx context.Context, request *structpb.Value) (*emptypb.Empty, error)
	ListValueBody(ctx context.Context, request *structpb.ListValue) (*emptypb.Empty, error)
	StructBody(ctx context.Context, request *structpb.Struct) (*emptypb.Empty, error)
	TimestampBody(ctx context.Context, request *timestamppb.Timestamp) (*emptypb.Empty, error)
	DurationBody(ctx context.Context, request *durationpb.Duration) (*emptypb.Empty, error)
} {
	return &gRPCBodyServer{
		bool: grpc.NewServer(
			endpointx.Chain(endpoints.Bool(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optBool: grpc.NewServer(
			endpointx.Chain(endpoints.OptBool(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repBool: grpc.NewServer(
			endpointx.Chain(endpoints.RepBool(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapBool: grpc.NewServer(
			endpointx.Chain(endpoints.WrapBool(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		int32: grpc.NewServer(
			endpointx.Chain(endpoints.Int32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optInt32: grpc.NewServer(
			endpointx.Chain(endpoints.OptInt32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repInt32: grpc.NewServer(
			endpointx.Chain(endpoints.RepInt32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapInt32: grpc.NewServer(
			endpointx.Chain(endpoints.WrapInt32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		uint32: grpc.NewServer(
			endpointx.Chain(endpoints.Uint32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optUint32: grpc.NewServer(
			endpointx.Chain(endpoints.OptUint32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repUint32: grpc.NewServer(
			endpointx.Chain(endpoints.RepUint32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapUint32: grpc.NewServer(
			endpointx.Chain(endpoints.WrapUint32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		fixed32: grpc.NewServer(
			endpointx.Chain(endpoints.Fixed32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optFixed32: grpc.NewServer(
			endpointx.Chain(endpoints.OptFixed32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repFixed32: grpc.NewServer(
			endpointx.Chain(endpoints.RepFixed32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		int64: grpc.NewServer(
			endpointx.Chain(endpoints.Int64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optInt64: grpc.NewServer(
			endpointx.Chain(endpoints.OptInt64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repInt64: grpc.NewServer(
			endpointx.Chain(endpoints.RepInt64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapInt64: grpc.NewServer(
			endpointx.Chain(endpoints.WrapInt64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		sint64: grpc.NewServer(
			endpointx.Chain(endpoints.Sint64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optSint64: grpc.NewServer(
			endpointx.Chain(endpoints.OptSint64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repSint64: grpc.NewServer(
			endpointx.Chain(endpoints.RepSint64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		sfixed64: grpc.NewServer(
			endpointx.Chain(endpoints.Sfixed64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optSfixed64: grpc.NewServer(
			endpointx.Chain(endpoints.OptSfixed64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repSfixed64: grpc.NewServer(
			endpointx.Chain(endpoints.RepSfixed64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		uint64: grpc.NewServer(
			endpointx.Chain(endpoints.Uint64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optUint64: grpc.NewServer(
			endpointx.Chain(endpoints.OptUint64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repUint64: grpc.NewServer(
			endpointx.Chain(endpoints.RepUint64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapUint64: grpc.NewServer(
			endpointx.Chain(endpoints.WrapUint64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		fixed64: grpc.NewServer(
			endpointx.Chain(endpoints.Fixed64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optFixed64: grpc.NewServer(
			endpointx.Chain(endpoints.OptFixed64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repFixed64: grpc.NewServer(
			endpointx.Chain(endpoints.RepFixed64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		float32: grpc.NewServer(
			endpointx.Chain(endpoints.Float32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optFloat32: grpc.NewServer(
			endpointx.Chain(endpoints.OptFloat32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repFloat32: grpc.NewServer(
			endpointx.Chain(endpoints.RepFloat32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapFloat32: grpc.NewServer(
			endpointx.Chain(endpoints.WrapFloat32(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		float64: grpc.NewServer(
			endpointx.Chain(endpoints.Float64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optFloat64: grpc.NewServer(
			endpointx.Chain(endpoints.OptFloat64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repFloat64: grpc.NewServer(
			endpointx.Chain(endpoints.RepFloat64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapFloat64: grpc.NewServer(
			endpointx.Chain(endpoints.WrapFloat64(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		string: grpc.NewServer(
			endpointx.Chain(endpoints.String(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optString: grpc.NewServer(
			endpointx.Chain(endpoints.OptString(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repString: grpc.NewServer(
			endpointx.Chain(endpoints.RepString(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapString: grpc.NewServer(
			endpointx.Chain(endpoints.WrapString(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		bytes: grpc.NewServer(
			endpointx.Chain(endpoints.Bytes(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optBytes: grpc.NewServer(
			endpointx.Chain(endpoints.OptBytes(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repBytes: grpc.NewServer(
			endpointx.Chain(endpoints.RepBytes(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapBytes: grpc.NewServer(
			endpointx.Chain(endpoints.WrapBytes(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		enum: grpc.NewServer(
			endpointx.Chain(endpoints.Enum(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		optEnum: grpc.NewServer(
			endpointx.Chain(endpoints.OptEnum(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		repEnum: grpc.NewServer(
			endpointx.Chain(endpoints.RepEnum(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		dictionary: grpc.NewServer(
			endpointx.Chain(endpoints.Dictionary(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		httpBody: grpc.NewServer(
			endpointx.Chain(endpoints.HttpBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		httpRequest: grpc.NewServer(
			endpointx.Chain(endpoints.HttpRequest(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		valueRequest: grpc.NewServer(
			endpointx.Chain(endpoints.ValueRequest(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		listValueRequest: grpc.NewServer(
			endpointx.Chain(endpoints.ListValueRequest(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		structRequest: grpc.NewServer(
			endpointx.Chain(endpoints.StructRequest(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		timestampRequest: grpc.NewServer(
			endpointx.Chain(endpoints.TimestampRequest(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		durationRequest: grpc.NewServer(
			endpointx.Chain(endpoints.DurationRequest(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapDoubleBody: grpc.NewServer(
			endpointx.Chain(endpoints.WrapDoubleBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapFloatBody: grpc.NewServer(
			endpointx.Chain(endpoints.WrapFloatBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapInt64Body: grpc.NewServer(
			endpointx.Chain(endpoints.WrapInt64Body(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapUint64Body: grpc.NewServer(
			endpointx.Chain(endpoints.WrapUint64Body(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapInt32Body: grpc.NewServer(
			endpointx.Chain(endpoints.WrapInt32Body(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapUint32Body: grpc.NewServer(
			endpointx.Chain(endpoints.WrapUint32Body(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapBoolBody: grpc.NewServer(
			endpointx.Chain(endpoints.WrapBoolBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapStringBody: grpc.NewServer(
			endpointx.Chain(endpoints.WrapStringBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		wrapBytesBody: grpc.NewServer(
			endpointx.Chain(endpoints.WrapBytesBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		httpBodyBody: grpc.NewServer(
			endpointx.Chain(endpoints.HttpBodyBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		httpRequestBody: grpc.NewServer(
			endpointx.Chain(endpoints.HttpRequestBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		valueBody: grpc.NewServer(
			endpointx.Chain(endpoints.ValueBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		listValueBody: grpc.NewServer(
			endpointx.Chain(endpoints.ListValueBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		structBody: grpc.NewServer(
			endpointx.Chain(endpoints.StructBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		timestampBody: grpc.NewServer(
			endpointx.Chain(endpoints.TimestampBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
		durationBody: grpc.NewServer(
			endpointx.Chain(endpoints.DurationBody(), mdw...),
			func(_ context.Context, v any) (any, error) { return v, nil },
			func(_ context.Context, v any) (any, error) { return v, nil },
			opts...,
		),
	}
}

type gRPCBodyClient struct {
	bool             endpoint.Endpoint
	optBool          endpoint.Endpoint
	repBool          endpoint.Endpoint
	wrapBool         endpoint.Endpoint
	int32            endpoint.Endpoint
	optInt32         endpoint.Endpoint
	repInt32         endpoint.Endpoint
	wrapInt32        endpoint.Endpoint
	uint32           endpoint.Endpoint
	optUint32        endpoint.Endpoint
	repUint32        endpoint.Endpoint
	wrapUint32       endpoint.Endpoint
	fixed32          endpoint.Endpoint
	optFixed32       endpoint.Endpoint
	repFixed32       endpoint.Endpoint
	int64            endpoint.Endpoint
	optInt64         endpoint.Endpoint
	repInt64         endpoint.Endpoint
	wrapInt64        endpoint.Endpoint
	sint64           endpoint.Endpoint
	optSint64        endpoint.Endpoint
	repSint64        endpoint.Endpoint
	sfixed64         endpoint.Endpoint
	optSfixed64      endpoint.Endpoint
	repSfixed64      endpoint.Endpoint
	uint64           endpoint.Endpoint
	optUint64        endpoint.Endpoint
	repUint64        endpoint.Endpoint
	wrapUint64       endpoint.Endpoint
	fixed64          endpoint.Endpoint
	optFixed64       endpoint.Endpoint
	repFixed64       endpoint.Endpoint
	float32          endpoint.Endpoint
	optFloat32       endpoint.Endpoint
	repFloat32       endpoint.Endpoint
	wrapFloat32      endpoint.Endpoint
	float64          endpoint.Endpoint
	optFloat64       endpoint.Endpoint
	repFloat64       endpoint.Endpoint
	wrapFloat64      endpoint.Endpoint
	string           endpoint.Endpoint
	optString        endpoint.Endpoint
	repString        endpoint.Endpoint
	wrapString       endpoint.Endpoint
	bytes            endpoint.Endpoint
	optBytes         endpoint.Endpoint
	repBytes         endpoint.Endpoint
	wrapBytes        endpoint.Endpoint
	enum             endpoint.Endpoint
	optEnum          endpoint.Endpoint
	repEnum          endpoint.Endpoint
	dictionary       endpoint.Endpoint
	httpBody         endpoint.Endpoint
	httpRequest      endpoint.Endpoint
	valueRequest     endpoint.Endpoint
	listValueRequest endpoint.Endpoint
	structRequest    endpoint.Endpoint
	timestampRequest endpoint.Endpoint
	durationRequest  endpoint.Endpoint
	wrapDoubleBody   endpoint.Endpoint
	wrapFloatBody    endpoint.Endpoint
	wrapInt64Body    endpoint.Endpoint
	wrapUint64Body   endpoint.Endpoint
	wrapInt32Body    endpoint.Endpoint
	wrapUint32Body   endpoint.Endpoint
	wrapBoolBody     endpoint.Endpoint
	wrapStringBody   endpoint.Endpoint
	wrapBytesBody    endpoint.Endpoint
	httpBodyBody     endpoint.Endpoint
	httpRequestBody  endpoint.Endpoint
	valueBody        endpoint.Endpoint
	listValueBody    endpoint.Endpoint
	structBody       endpoint.Endpoint
	timestampBody    endpoint.Endpoint
	durationBody     endpoint.Endpoint
}

func (c *gRPCBodyClient) Bool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.bool(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optBool(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repBool(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.wrapBool(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Int32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.int32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optInt32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repInt32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.wrapInt32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Uint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.uint32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optUint32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repUint32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.wrapUint32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Fixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.fixed32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptFixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optFixed32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepFixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repFixed32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Int64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.int64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optInt64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repInt64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.wrapInt64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Sint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.sint64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptSint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optSint64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepSint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repSint64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Sfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.sfixed64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptSfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optSfixed64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepSfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repSfixed64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Uint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.uint64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optUint64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repUint64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.wrapUint64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Fixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.fixed64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptFixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optFixed64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepFixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repFixed64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Float32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.float32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optFloat32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repFloat32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.wrapFloat32(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Float64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.float64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optFloat64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repFloat64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.wrapFloat64(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) String(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.string(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optString(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repString(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.wrapString(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Bytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.bytes(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optBytes(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repBytes(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.wrapBytes(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Enum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.enum(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) OptEnum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.optEnum(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) RepEnum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.repEnum(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) Dictionary(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.dictionary(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) HttpBody(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.httpBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) HttpRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.httpRequest(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) ValueRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.valueRequest(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) ListValueRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.listValueRequest(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) StructRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.structRequest(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) TimestampRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.timestampRequest(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) DurationRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error) {
	rep, err := c.durationRequest(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapDoubleBody(ctx context.Context, request *wrapperspb.DoubleValue) (*emptypb.Empty, error) {
	rep, err := c.wrapDoubleBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapFloatBody(ctx context.Context, request *wrapperspb.FloatValue) (*emptypb.Empty, error) {
	rep, err := c.wrapFloatBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapInt64Body(ctx context.Context, request *wrapperspb.Int64Value) (*emptypb.Empty, error) {
	rep, err := c.wrapInt64Body(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapUint64Body(ctx context.Context, request *wrapperspb.UInt64Value) (*emptypb.Empty, error) {
	rep, err := c.wrapUint64Body(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapInt32Body(ctx context.Context, request *wrapperspb.Int32Value) (*emptypb.Empty, error) {
	rep, err := c.wrapInt32Body(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapUint32Body(ctx context.Context, request *wrapperspb.UInt32Value) (*emptypb.Empty, error) {
	rep, err := c.wrapUint32Body(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapBoolBody(ctx context.Context, request *wrapperspb.BoolValue) (*emptypb.Empty, error) {
	rep, err := c.wrapBoolBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapStringBody(ctx context.Context, request *wrapperspb.StringValue) (*emptypb.Empty, error) {
	rep, err := c.wrapStringBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) WrapBytesBody(ctx context.Context, request *wrapperspb.BytesValue) (*emptypb.Empty, error) {
	rep, err := c.wrapBytesBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) HttpBodyBody(ctx context.Context, request *httpbody.HttpBody) (*emptypb.Empty, error) {
	rep, err := c.httpBodyBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) HttpRequestBody(ctx context.Context, request *http.HttpRequest) (*emptypb.Empty, error) {
	rep, err := c.httpRequestBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) ValueBody(ctx context.Context, request *structpb.Value) (*emptypb.Empty, error) {
	rep, err := c.valueBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) ListValueBody(ctx context.Context, request *structpb.ListValue) (*emptypb.Empty, error) {
	rep, err := c.listValueBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) StructBody(ctx context.Context, request *structpb.Struct) (*emptypb.Empty, error) {
	rep, err := c.structBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) TimestampBody(ctx context.Context, request *timestamppb.Timestamp) (*emptypb.Empty, error) {
	rep, err := c.timestampBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func (c *gRPCBodyClient) DurationBody(ctx context.Context, request *durationpb.Duration) (*emptypb.Empty, error) {
	rep, err := c.durationBody(ctx, request)
	if err != nil {
		return nil, err
	}
	return rep.(*emptypb.Empty), nil
}

func NewBodyGRPCClient(
	conn *grpc1.ClientConn,
	mdw []endpoint.Middleware,
	opts ...grpc.ClientOption,
) interface {
	Bool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapBool(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Int32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapInt32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Uint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapUint32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Fixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptFixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepFixed32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Int64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapInt64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Sint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptSint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepSint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Sfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptSfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepSfixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Uint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapUint64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Fixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptFixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepFixed64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Float32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapFloat32(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Float64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapFloat64(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	String(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapString(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Bytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapBytes(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Enum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	OptEnum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	RepEnum(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	Dictionary(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	HttpBody(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	HttpRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	ValueRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	ListValueRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	StructRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	TimestampRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	DurationRequest(ctx context.Context, request *BodyRequest) (*emptypb.Empty, error)
	WrapDoubleBody(ctx context.Context, request *wrapperspb.DoubleValue) (*emptypb.Empty, error)
	WrapFloatBody(ctx context.Context, request *wrapperspb.FloatValue) (*emptypb.Empty, error)
	WrapInt64Body(ctx context.Context, request *wrapperspb.Int64Value) (*emptypb.Empty, error)
	WrapUint64Body(ctx context.Context, request *wrapperspb.UInt64Value) (*emptypb.Empty, error)
	WrapInt32Body(ctx context.Context, request *wrapperspb.Int32Value) (*emptypb.Empty, error)
	WrapUint32Body(ctx context.Context, request *wrapperspb.UInt32Value) (*emptypb.Empty, error)
	WrapBoolBody(ctx context.Context, request *wrapperspb.BoolValue) (*emptypb.Empty, error)
	WrapStringBody(ctx context.Context, request *wrapperspb.StringValue) (*emptypb.Empty, error)
	WrapBytesBody(ctx context.Context, request *wrapperspb.BytesValue) (*emptypb.Empty, error)
	HttpBodyBody(ctx context.Context, request *httpbody.HttpBody) (*emptypb.Empty, error)
	HttpRequestBody(ctx context.Context, request *http.HttpRequest) (*emptypb.Empty, error)
	ValueBody(ctx context.Context, request *structpb.Value) (*emptypb.Empty, error)
	ListValueBody(ctx context.Context, request *structpb.ListValue) (*emptypb.Empty, error)
	StructBody(ctx context.Context, request *structpb.Struct) (*emptypb.Empty, error)
	TimestampBody(ctx context.Context, request *timestamppb.Timestamp) (*emptypb.Empty, error)
	DurationBody(ctx context.Context, request *durationpb.Duration) (*emptypb.Empty, error)
} {
	return &gRPCBodyClient{
		bool: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Bool",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optBool: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptBool",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repBool: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepBool",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapBool: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapBool",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		int32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Int32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optInt32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptInt32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repInt32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepInt32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapInt32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapInt32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		uint32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Uint32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optUint32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptUint32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repUint32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepUint32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapUint32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapUint32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		fixed32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Fixed32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optFixed32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptFixed32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repFixed32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepFixed32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		int64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Int64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optInt64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptInt64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repInt64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepInt64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapInt64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapInt64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		sint64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Sint64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optSint64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptSint64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repSint64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepSint64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		sfixed64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Sfixed64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optSfixed64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptSfixed64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repSfixed64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepSfixed64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		uint64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Uint64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optUint64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptUint64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repUint64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepUint64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapUint64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapUint64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		fixed64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Fixed64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optFixed64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptFixed64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repFixed64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepFixed64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		float32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Float32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optFloat32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptFloat32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repFloat32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepFloat32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapFloat32: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapFloat32",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		float64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Float64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optFloat64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptFloat64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repFloat64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepFloat64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapFloat64: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapFloat64",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		string: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"String",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optString: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptString",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repString: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepString",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapString: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapString",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		bytes: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Bytes",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optBytes: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptBytes",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repBytes: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepBytes",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapBytes: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapBytes",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		enum: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Enum",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		optEnum: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"OptEnum",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		repEnum: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"RepEnum",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		dictionary: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"Dictionary",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		httpBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"HttpBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		httpRequest: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"HttpRequest",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		valueRequest: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"ValueRequest",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		listValueRequest: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"ListValueRequest",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		structRequest: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"StructRequest",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		timestampRequest: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"TimestampRequest",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		durationRequest: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"DurationRequest",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapDoubleBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapDoubleBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapFloatBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapFloatBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapInt64Body: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapInt64Body",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapUint64Body: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapUint64Body",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapInt32Body: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapInt32Body",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapUint32Body: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapUint32Body",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapBoolBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapBoolBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapStringBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapStringBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		wrapBytesBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"WrapBytesBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		httpBodyBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"HttpBodyBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		httpRequestBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"HttpRequestBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		valueBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"ValueBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		listValueBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"ListValueBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		structBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"StructBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		timestampBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"TimestampBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
		durationBody: endpointx.Chain(
			grpc.NewClient(
				conn,
				"leo.example.demo.v1.Body",
				"DurationBody",
				func(_ context.Context, v any) (any, error) { return v, nil },
				func(_ context.Context, v any) (any, error) { return v, nil },
				emptypb.Empty{},
				opts...,
			).Endpoint(),
			mdw...),
	}
}
